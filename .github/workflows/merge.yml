name: merge

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - jules-branches

permissions:
  checks: write
  contents: write
  pull-requests: write

jobs:
  check_coding_style:
    needs: [check_program_compilation]
    name: check coding-style
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest

    steps:
      - name: get coding-style errors
        id: check_coding_style
        run: |
          check.sh $(pwd) $(pwd)
          while read ERROR; do
            filename=$(echo $ERROR | cut -d ':' -f 1 | cut -d '/' -f 2)
            line=$(echo $ERROR | cut -d ':' -f 2)
            gravity=$(echo $ERROR | awk -F ':' '{print $3}')
            error=$(echo $ERROR | awk -F ':' '{print $4}')
            echo "::error file=$filename, line=$line, title=$gravity coding style error::$error"
          done < coding-style-reports.log

  check_program_compilation:
    name: "Check compilation"
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest

    steps:
      - uses: actions/checkout@v3
      - id: check_program_compilation
        run: make
        timeout-minutes: 2
      - run: make clean
      - run: |
          OIFS=$IFS
          IFS=','
          for x in $EXECUTABLES
            do
              ./$x $ARGUMENTS
            done
          IFS=$OIFS

  # run_tests:
  #   needs: [check_program_compilation]

  merge-test:
    name: Merge into main
    runs-on: ubuntu-latest
    needs:
      - check_program_compilation
      - check_coding_style
    steps:
      - name: Checkout repository
        uses: action/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Test Merge
        run: |
          target_branch="origin/jules-branch"
          git checkout main || git checkout -b main origin/main
          git merge "$target_branch" --no-ff
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
